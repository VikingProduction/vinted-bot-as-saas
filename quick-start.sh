#!/bin/bash

# Script de d√©marrage rapide pour installation native
# Usage: ./quick-start.sh

set -e

PROJECT_DIR="/opt/vinted-bot-saas"

echo "üöÄ D√©marrage Rapide Vinted Bot SAAS"
echo "==================================="

# V√©rifier si install√©
if [ ! -d "$PROJECT_DIR" ]; then
    echo "‚ùå Installation non trouv√©e. Ex√©cutez d'abord install-native.sh"
    exit 1
fi

cd $PROJECT_DIR

# 1. V√©rifier les services syst√®me
echo "üìã V√©rification des services syst√®me..."

# MySQL
if ! systemctl is-active --quiet mysql; then
    echo "üîÑ D√©marrage MySQL..."
    sudo systemctl start mysql
fi

# Redis
if ! systemctl is-active --quiet redis; then
    echo "üîÑ D√©marrage Redis..."
    sudo systemctl start redis-server || sudo systemctl start redis
fi

# Nginx
if ! systemctl is-active --quiet nginx; then
    echo "üîÑ D√©marrage Nginx..."
    sudo systemctl start nginx
fi

# 2. Construire le frontend si n√©cessaire
if [ ! -d "frontend/build" ]; then
    echo "üèóÔ∏è Construction du frontend..."
    cd frontend
    npm install
    npm run build
    cd ..
fi

# 3. Activer l'environnement Python
echo "üêç Activation environnement Python..."
source venv/bin/activate

# 4. V√©rifier la base de donn√©es
echo "üóÑÔ∏è V√©rification base de donn√©es..."
if ! mysql -u vinted_user -p$(grep DB_PASS .env | cut -d'=' -f2) -e "USE vinted_bot;" 2>/dev/null; then
    echo "‚ùå Probl√®me base de donn√©es. V√©rifiez la configuration."
    exit 1
fi

# 5. D√©marrer avec PM2
echo "‚ö° D√©marrage des services avec PM2..."

# Arr√™ter les anciens processus
pm2 stop all 2>/dev/null || true
pm2 delete all 2>/dev/null || true

# D√©marrer les nouveaux
pm2 start ecosystem.config.js

# 6. Attendre que les services soient pr√™ts
echo "‚è≥ Attente d√©marrage des services..."
sleep 10

# 7. V√©rifications de sant√©
echo "üè• V√©rification de sant√©..."

# API
if curl -s -f http://localhost:8000/health > /dev/null; then
    echo "‚úÖ API: OK"
else
    echo "‚ùå API: FAIL"
    echo "Logs API:"
    pm2 logs vinted-bot-api --lines 5
fi

# Frontend/Nginx
if curl -s -f http://localhost > /dev/null; then
    echo "‚úÖ Frontend: OK"
else
    echo "‚ùå Frontend: FAIL"
fi

# Celery Worker
if pm2 list | grep -q "vinted-bot-worker.*online"; then
    echo "‚úÖ Worker: OK"
else
    echo "‚ùå Worker: FAIL"
fi

# 8. Afficher le statut
echo ""
echo "üìä Statut des services:"
pm2 status

echo ""
echo "üåê URLs d'acc√®s:"
echo "- Application: http://localhost"
echo "- API Docs: http://localhost/docs"
echo "- API Health: http://localhost:8000/health"

echo ""
echo "üéØ TODO - Configuration requise:"
echo "1. Configurer SmartProxy dans .env:"
echo "   SMARTPROXY_USERNAME=your_username"
echo "   SMARTPROXY_PASSWORD=your_password"
echo ""
echo "2. Configurer Stripe dans .env:"
echo "   STRIPE_SECRET_KEY=sk_test_..."
echo "   STRIPE_PUBLISHABLE_KEY=pk_test_..."
echo ""
echo "3. Red√©marrer apr√®s configuration: pm2 restart all"

echo ""
echo "‚úÖ D√©marrage termin√© ! Votre bot Vinted SAAS est pr√™t."

# Proposer de lancer le monitoring
read -p "Voulez-vous lancer le monitoring temps r√©el ? (y/n): " -n 1 -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]; then
    pm2 monit
fi